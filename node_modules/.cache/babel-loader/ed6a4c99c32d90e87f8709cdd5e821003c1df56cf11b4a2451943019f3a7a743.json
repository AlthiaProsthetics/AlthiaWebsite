{"ast":null,"code":"/**\n * @license @tabler/icons-react v3.3.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.mjs';\nconst createReactComponent = (type, iconName, iconNamePascal, iconNode) => {\n  const Component = forwardRef(({\n    color = \"currentColor\",\n    size = 24,\n    stroke = 2,\n    className,\n    children,\n    ...rest\n  }, ref) => createElement(\"svg\", {\n    ref,\n    ...defaultAttributes[type],\n    width: size,\n    height: size,\n    className: [`tabler-icon`, `tabler-icon-${iconName}`, className].join(\" \"),\n    ...(type === \"filled\" ? {\n      fill: color\n    } : {\n      strokeWidth: stroke,\n      stroke: color\n    }),\n    ...rest\n  }, [...iconNode.map(([tag, attrs]) => createElement(tag, attrs)), ...(Array.isArray(children) ? children : [children])]));\n  Component.displayName = `${iconNamePascal}`;\n  return Component;\n};\nexport { createReactComponent as default };","map":{"version":3,"names":["createReactComponent","type","iconName","iconNamePascal","iconNode","Component","forwardRef","color","size","stroke","className","children","rest","ref","createElement","defaultAttributes","width","height","join","fill","strokeWidth","map","tag","attrs","Array","isArray","displayName"],"sources":["/Users/gabrielleshieh/node_modules/@tabler/icons-react/src/createReactComponent.ts"],"sourcesContent":["import { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes';\nimport type { IconNode, IconProps, Icon } from './types';\n\nconst createReactComponent = (\n  type: 'outline' | 'filled',\n  iconName: string,\n  iconNamePascal: string,\n  iconNode: IconNode,\n) => {\n  const Component = forwardRef<Icon, IconProps>(\n    (\n      { color = 'currentColor', size = 24, stroke = 2, className, children, ...rest }: IconProps,\n      ref,\n    ) =>\n      createElement(\n        'svg',\n        {\n          ref,\n          ...defaultAttributes[type],\n          width: size,\n          height: size,\n          className: [`tabler-icon`, `tabler-icon-${iconName}`, className].join(' '),\n          ...(type === 'filled'\n            ? {\n                fill: color,\n              }\n            : {\n                strokeWidth: stroke,\n                stroke: color,\n              }),\n          ...rest,\n        },\n        [\n          ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n          ...(Array.isArray(children) ? children : [children]),\n        ],\n      ),\n  );\n\n  Component.displayName = `${iconNamePascal}`;\n\n  return Component;\n};\n\nexport default createReactComponent;\n"],"mappings":";;;;;;;;;AAIA,MAAMA,oBAAuB,GAAAA,CAC3BC,IACA,EAAAC,QAAA,EACAC,cAAA,EACAC,QACG;EACH,MAAMC,SAAY,GAAAC,UAAA,CAChB,CACE;IAAEC,KAAQ;IAAgBC,IAAO;IAAIC,MAAS;IAAGC,SAAW;IAAAC,QAAA;IAAU,GAAGC;EAAA,GACzEC,GAEA,KAAAC,aAAA,CACE,OACA;IACED,GAAA;IACA,GAAGE,iBAAA,CAAkBd,IAAI;IACzBe,KAAO,EAAAR,IAAA;IACPS,MAAQ,EAAAT,IAAA;IACRE,SAAA,EAAW,CAAgB,8BAAeR,QAAY,IAAAQ,SAAS,CAAE,CAAAQ,IAAA,CAAK,GAAG;IACzE,IAAIjB,IAAA,KAAS,QACT;MACEkB,IAAM,EAAAZ;IAAA,CAER;MACEa,WAAa,EAAAX,MAAA;MACbA,MAAQ,EAAAF;IACV;IACJ,GAAGK;EACL,GACA,CACE,GAAGR,QAAS,CAAAiB,GAAA,CAAI,CAAC,CAACC,GAAK,EAAAC,KAAK,CAAM,KAAAT,aAAA,CAAcQ,GAAK,EAAAC,KAAK,CAAC,GAC3D,IAAIC,KAAM,CAAAC,OAAA,CAAQd,QAAQ,CAAI,GAAAA,QAAA,GAAW,CAACA,QAAQ,GAEtD,EACJ;EAEUN,SAAA,CAAAqB,WAAA,GAAc,GAAGvB,cAAc;EAElC,OAAAE,SAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}